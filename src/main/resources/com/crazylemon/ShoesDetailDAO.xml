<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazylemon.dao.ShoesDetailDAO">
  <resultMap id="BaseResultMap" type="com.crazylemon.entity.ShoesDetail">
    <id column="shoes_detail_id" jdbcType="INTEGER" property="shoesDetailId" />
    <result column="shoes_id" jdbcType="INTEGER" property="shoesId" />
    <result column="shoes_color_id" jdbcType="INTEGER" property="shoesColorId" />
    <result column="shoes_size_id" jdbcType="INTEGER" property="shoesSizeId" />
    <result column="shoes_inventory" jdbcType="INTEGER" property="shoesInventory" />
    <result column="shoes_sale_count" jdbcType="INTEGER" property="shoesSaleCount" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shoes_detail_id, shoes_id, shoes_color_id, shoes_size_id, shoes_inventory, shoes_sale_count, 
    `status`
  </sql>
  <select id="selectByExample" parameterType="com.crazylemon.entity.ShoesDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shoes_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shoes_detail
    where shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shoes_detail
    where shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crazylemon.entity.ShoesDetailExample">
    delete from shoes_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crazylemon.entity.ShoesDetail">
    insert into shoes_detail (shoes_detail_id, shoes_id, shoes_color_id, 
      shoes_size_id, shoes_inventory, shoes_sale_count, 
      `status`)
    values (#{shoesDetailId,jdbcType=INTEGER}, #{shoesId,jdbcType=INTEGER}, #{shoesColorId,jdbcType=INTEGER}, 
      #{shoesSizeId,jdbcType=INTEGER}, #{shoesInventory,jdbcType=INTEGER}, #{shoesSaleCount,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.crazylemon.entity.ShoesDetail">
    insert into shoes_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shoesDetailId != null">
        shoes_detail_id,
      </if>
      <if test="shoesId != null">
        shoes_id,
      </if>
      <if test="shoesColorId != null">
        shoes_color_id,
      </if>
      <if test="shoesSizeId != null">
        shoes_size_id,
      </if>
      <if test="shoesInventory != null">
        shoes_inventory,
      </if>
      <if test="shoesSaleCount != null">
        shoes_sale_count,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shoesDetailId != null">
        #{shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="shoesId != null">
        #{shoesId,jdbcType=INTEGER},
      </if>
      <if test="shoesColorId != null">
        #{shoesColorId,jdbcType=INTEGER},
      </if>
      <if test="shoesSizeId != null">
        #{shoesSizeId,jdbcType=INTEGER},
      </if>
      <if test="shoesInventory != null">
        #{shoesInventory,jdbcType=INTEGER},
      </if>
      <if test="shoesSaleCount != null">
        #{shoesSaleCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crazylemon.entity.ShoesDetailExample" resultType="java.lang.Long">
    select count(*) from shoes_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shoes_detail
    <set>
      <if test="record.shoesDetailId != null">
        shoes_detail_id = #{record.shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.shoesId != null">
        shoes_id = #{record.shoesId,jdbcType=INTEGER},
      </if>
      <if test="record.shoesColorId != null">
        shoes_color_id = #{record.shoesColorId,jdbcType=INTEGER},
      </if>
      <if test="record.shoesSizeId != null">
        shoes_size_id = #{record.shoesSizeId,jdbcType=INTEGER},
      </if>
      <if test="record.shoesInventory != null">
        shoes_inventory = #{record.shoesInventory,jdbcType=INTEGER},
      </if>
      <if test="record.shoesSaleCount != null">
        shoes_sale_count = #{record.shoesSaleCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shoes_detail
    set shoes_detail_id = #{record.shoesDetailId,jdbcType=INTEGER},
      shoes_id = #{record.shoesId,jdbcType=INTEGER},
      shoes_color_id = #{record.shoesColorId,jdbcType=INTEGER},
      shoes_size_id = #{record.shoesSizeId,jdbcType=INTEGER},
      shoes_inventory = #{record.shoesInventory,jdbcType=INTEGER},
      shoes_sale_count = #{record.shoesSaleCount,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazylemon.entity.ShoesDetail">
    update shoes_detail
    <set>
      <if test="shoesId != null">
        shoes_id = #{shoesId,jdbcType=INTEGER},
      </if>
      <if test="shoesColorId != null">
        shoes_color_id = #{shoesColorId,jdbcType=INTEGER},
      </if>
      <if test="shoesSizeId != null">
        shoes_size_id = #{shoesSizeId,jdbcType=INTEGER},
      </if>
      <if test="shoesInventory != null">
        shoes_inventory = #{shoesInventory,jdbcType=INTEGER},
      </if>
      <if test="shoesSaleCount != null">
        shoes_sale_count = #{shoesSaleCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazylemon.entity.ShoesDetail">
    update shoes_detail
    set shoes_id = #{shoesId,jdbcType=INTEGER},
      shoes_color_id = #{shoesColorId,jdbcType=INTEGER},
      shoes_size_id = #{shoesSizeId,jdbcType=INTEGER},
      shoes_inventory = #{shoesInventory,jdbcType=INTEGER},
      shoes_sale_count = #{shoesSaleCount,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </update>
</mapper>