<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazylemon.dao.OrderDetailDAO">
  <resultMap id="BaseResultMap" type="com.crazylemon.entity.OrderDetail">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <id column="shoes_detail_id" jdbcType="INTEGER" property="shoesDetailId" />
    <result column="quality" jdbcType="INTEGER" property="quality" />
    <result column="order_shoes_color" jdbcType="VARCHAR" property="orderShoesColor" />
    <result column="order_shoes_size" jdbcType="VARCHAR" property="orderShoesSize" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, shoes_detail_id, quality, order_shoes_color, order_shoes_size
  </sql>
  <select id="selectByExample" parameterType="com.crazylemon.entity.OrderDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.crazylemon.entity.OrderDetailKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where order_id = #{orderId,jdbcType=INTEGER}
      and shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.crazylemon.entity.OrderDetailKey">
    delete from order_detail
    where order_id = #{orderId,jdbcType=INTEGER}
      and shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crazylemon.entity.OrderDetailExample">
    delete from order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crazylemon.entity.OrderDetail">
    insert into order_detail (order_id, shoes_detail_id, quality, 
      order_shoes_color, order_shoes_size)
    values (#{orderId,jdbcType=INTEGER}, #{shoesDetailId,jdbcType=INTEGER}, #{quality,jdbcType=INTEGER}, 
      #{orderShoesColor,jdbcType=VARCHAR}, #{orderShoesSize,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crazylemon.entity.OrderDetail">
    insert into order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="shoesDetailId != null">
        shoes_detail_id,
      </if>
      <if test="quality != null">
        quality,
      </if>
      <if test="orderShoesColor != null">
        order_shoes_color,
      </if>
      <if test="orderShoesSize != null">
        order_shoes_size,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="shoesDetailId != null">
        #{shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="quality != null">
        #{quality,jdbcType=INTEGER},
      </if>
      <if test="orderShoesColor != null">
        #{orderShoesColor,jdbcType=VARCHAR},
      </if>
      <if test="orderShoesSize != null">
        #{orderShoesSize,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crazylemon.entity.OrderDetailExample" resultType="java.lang.Long">
    select count(*) from order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_detail
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.shoesDetailId != null">
        shoes_detail_id = #{record.shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.quality != null">
        quality = #{record.quality,jdbcType=INTEGER},
      </if>
      <if test="record.orderShoesColor != null">
        order_shoes_color = #{record.orderShoesColor,jdbcType=VARCHAR},
      </if>
      <if test="record.orderShoesSize != null">
        order_shoes_size = #{record.orderShoesSize,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_detail
    set order_id = #{record.orderId,jdbcType=INTEGER},
      shoes_detail_id = #{record.shoesDetailId,jdbcType=INTEGER},
      quality = #{record.quality,jdbcType=INTEGER},
      order_shoes_color = #{record.orderShoesColor,jdbcType=VARCHAR},
      order_shoes_size = #{record.orderShoesSize,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazylemon.entity.OrderDetail">
    update order_detail
    <set>
      <if test="quality != null">
        quality = #{quality,jdbcType=INTEGER},
      </if>
      <if test="orderShoesColor != null">
        order_shoes_color = #{orderShoesColor,jdbcType=VARCHAR},
      </if>
      <if test="orderShoesSize != null">
        order_shoes_size = #{orderShoesSize,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
      and shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazylemon.entity.OrderDetail">
    update order_detail
    set quality = #{quality,jdbcType=INTEGER},
      order_shoes_color = #{orderShoesColor,jdbcType=VARCHAR},
      order_shoes_size = #{orderShoesSize,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
      and shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER}
  </update>
</mapper>