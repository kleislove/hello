<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazylemon.dao.CartDAO">
  <resultMap id="BaseResultMap" type="com.crazylemon.entity.Cart">
    <id column="cart_id" jdbcType="INTEGER" property="cartId" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="shoes_detail_id" jdbcType="INTEGER" property="shoesDetailId" />
    <result column="quality" jdbcType="VARCHAR" property="quality" />
    <result column="add_time" jdbcType="DATE" property="addTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cart_id, cust_id, shoes_detail_id, quality, add_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.crazylemon.entity.CartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cart
    where cart_id = #{cartId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cart
    where cart_id = #{cartId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crazylemon.entity.CartExample">
    delete from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crazylemon.entity.Cart">
    insert into cart (cart_id, cust_id, shoes_detail_id, 
      quality, add_time, update_time
      )
    values (#{cartId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{shoesDetailId,jdbcType=INTEGER}, 
      #{quality,jdbcType=VARCHAR}, #{addTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crazylemon.entity.Cart">
    insert into cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cartId != null">
        cart_id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="shoesDetailId != null">
        shoes_detail_id,
      </if>
      <if test="quality != null">
        quality,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cartId != null">
        #{cartId,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="shoesDetailId != null">
        #{shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="quality != null">
        #{quality,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crazylemon.entity.CartExample" resultType="java.lang.Long">
    select count(*) from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cart
    <set>
      <if test="record.cartId != null">
        cart_id = #{record.cartId,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.shoesDetailId != null">
        shoes_detail_id = #{record.shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.quality != null">
        quality = #{record.quality,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cart
    set cart_id = #{record.cartId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      shoes_detail_id = #{record.shoesDetailId,jdbcType=INTEGER},
      quality = #{record.quality,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=DATE},
      update_time = #{record.updateTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazylemon.entity.Cart">
    update cart
    <set>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="shoesDetailId != null">
        shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER},
      </if>
      <if test="quality != null">
        quality = #{quality,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where cart_id = #{cartId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazylemon.entity.Cart">
    update cart
    set cust_id = #{custId,jdbcType=INTEGER},
      shoes_detail_id = #{shoesDetailId,jdbcType=INTEGER},
      quality = #{quality,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE}
    where cart_id = #{cartId,jdbcType=INTEGER}
  </update>
</mapper>